vagrant@ubuntu-focal:~/golang/src/httpserver$ k delete configmap httpserver-env-config
configmap "httpserver-env-config" deleted

vi httpserver.configmap

vagrant@ubuntu-focal:~/golang/src/httpserver$ kubectl create configmap httpserver-env-config --from-env-file=httpserver.configmap
configmap/httpserver-env-config created

vagrant@ubuntu-focal:~/golang/src/httpserver$ k create -f httpserver-deploy.yaml
deployment.apps/httpserver created

vagrant@ubuntu-focal:~/golang/src/httpserver$ k get deploy
NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
httpserver                     3/3     3            3           24s
loki-grafana                   1/1     1            1           15h
loki-kube-state-metrics        1/1     1            1           15h
loki-prometheus-alertmanager   1/1     1            1           15h
loki-prometheus-pushgateway    1/1     1            1           15h
loki-prometheus-server         1/1     1            1           15h

vagrant@ubuntu-focal:~/golang/src/httpserver$ k get pods -owide
NAME                                            READY   STATUS    RESTARTS   AGE     IP                NODE           NOMINATED NODE   READINESS GATES
httpserver-6f758cd4bb-d7kkj                     1/1     Running   0          3m25s   192.168.223.163   ubuntu-focal   <none>           <none>
httpserver-6f758cd4bb-r2g7d                     1/1     Running   0          3m25s   192.168.223.156   ubuntu-focal   <none>           <none>
httpserver-6f758cd4bb-zq7gc                     1/1     Running   0          3m25s   192.168.223.155   ubuntu-focal   <none>           <none>
loki-0                                          1/1     Running   0          16h     192.168.223.141   ubuntu-focal   <none>           <none>
loki-grafana-74dfbb657-d6cgr                    1/1     Running   0          16h     192.168.223.157   ubuntu-focal   <none>           <none>
loki-kube-state-metrics-6c7c68c46-t4txj         1/1     Running   0          16h     192.168.223.152   ubuntu-focal   <none>           <none>
loki-prometheus-alertmanager-86469c7fd8-4qmll   2/2     Running   0          16h     192.168.223.142   ubuntu-focal   <none>           <none>
loki-prometheus-node-exporter-4692b             1/1     Running   0          16h     10.0.2.15         ubuntu-focal   <none>           <none>
loki-prometheus-pushgateway-f8d8f7945-wnrd8     1/1     Running   0          16h     192.168.223.183   ubuntu-focal   <none>           <none>
loki-prometheus-server-64f746787f-w5v9z         2/2     Running   0          16h     192.168.223.148   ubuntu-focal   <none>           <none>
loki-promtail-ctbt5                             1/1     Running   0          16h     192.168.223.182   ubuntu-focal   <none>           <none>

vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/healthz
ok
vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/
vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/
vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/
vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/
vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/

vagrant@ubuntu-focal:~/golang/src/httpserver$ k logs httpserver-6f758cd4bb-d7kkj
2021/12/18 07:47:38 --> GET /
User-Agent=curl/7.68.0
Accept=*/*
VERSION=1.4
Remote IP=10.0.2.15:41120
2021/12/18 07:47:39 <-- 200 OK
2021/12/18 07:47:43 --> GET /
2021/12/18 07:47:43 <-- 200 OK
User-Agent=curl/7.68.0
Accept=*/*
VERSION=1.4
Remote IP=10.0.2.15:41186
2021/12/18 07:47:46 --> GET /
2021/12/18 07:47:48 <-- 200 OK
User-Agent=curl/7.68.0
Accept=*/*
VERSION=1.4
Remote IP=10.0.2.15:41222
2021/12/18 07:47:51 --> GET /
User-Agent=curl/7.68.0
Accept=*/*
VERSION=1.4
2021/12/18 07:47:52 <-- 200 OK
Remote IP=10.0.2.15:41300
2021/12/18 07:47:54 --> GET /
User-Agent=curl/7.68.0
Accept=*/*
VERSION=1.4
Remote IP=10.0.2.15:41352
2021/12/18 07:47:55 <-- 200 OK
vagrant@ubuntu-focal:~/golang/src/httpserver$


vagrant@ubuntu-focal:~/golang/src/httpserver$ curl 192.168.223.163/metrics
# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 0
go_gc_duration_seconds{quantile="0.25"} 0
go_gc_duration_seconds{quantile="0.5"} 0
go_gc_duration_seconds{quantile="0.75"} 0
go_gc_duration_seconds{quantile="1"} 0
go_gc_duration_seconds_sum 0
go_gc_duration_seconds_count 0
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 9
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.17.3"} 1
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 2.660176e+06
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 2.660176e+06
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.446114e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 717
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 0
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 4.079336e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 2.660176e+06
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 4.456448e+06
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 3.473408e+06
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 9588
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 4.358144e+06
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 7.929856e+06
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 0
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 10305
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 4800
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 16384
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 54400
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 65536
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 4.473924e+06
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 898366
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 458752
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 458752
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 1.4894344e+07
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 8
# HELP httpserver_execution_latency_seconds Time spent.
# TYPE httpserver_execution_latency_seconds histogram
httpserver_execution_latency_seconds_bucket{step="total",le="0.001"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.002"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.004"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.008"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.016"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.032"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.064"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.128"} 0
httpserver_execution_latency_seconds_bucket{step="total",le="0.256"} 1
httpserver_execution_latency_seconds_bucket{step="total",le="0.512"} 2
httpserver_execution_latency_seconds_bucket{step="total",le="1.024"} 2
httpserver_execution_latency_seconds_bucket{step="total",le="2.048"} 5
httpserver_execution_latency_seconds_bucket{step="total",le="4.096"} 5
httpserver_execution_latency_seconds_bucket{step="total",le="8.192"} 5
httpserver_execution_latency_seconds_bucket{step="total",le="16.384"} 5
httpserver_execution_latency_seconds_bucket{step="total",le="+Inf"} 5
httpserver_execution_latency_seconds_sum{step="total"} 5.043585705
httpserver_execution_latency_seconds_count{step="total"} 5
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 0.31
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 11
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 1.2509184e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.63981343854e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 1.184956416e+09
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes 1.8446744073709552e+19
# HELP promhttp_metric_handler_requests_in_flight Current number of scrapes being served.
# TYPE promhttp_metric_handler_requests_in_flight gauge
promhttp_metric_handler_requests_in_flight 1
# HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.
# TYPE promhttp_metric_handler_requests_total counter
promhttp_metric_handler_requests_total{code="200"} 4
promhttp_metric_handler_requests_total{code="500"} 0
promhttp_metric_handler_requests_total{code="503"} 0
vagrant@ubuntu-focal:~/golang/src/httpserver$

